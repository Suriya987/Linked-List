Source : GFG

Given a singly linked list of size N. The task is to left-shift the linked list by k nodes,
 where k is a given positive integer smaller than or equal to length of the linked list.

Input:
N = 5
value[] = {2, 4, 7, 8, 9}
k = 3
Output: 8 9 2 4 7

Explanation:
Rotate 1: 4 -> 7 -> 8 -> 9 -> 2
Rotate 2: 7 -> 8 -> 9 -> 2 -> 4
Rotate 3: 8 -> 9 -> 2 -> 4 -> 7


Basic :  ( Time Limit Exceeded )  Test Cases Passes : 1034 / 2113


Time Complexity : O(N*N)
Space Complexity : O(1)


class Solution
{
    public:
    //Function to rotate a linked list.
    Node* rotate(Node* head, int k)
    {
        /*
           1. store the first head value in a newNode and delete the current head node 
              and move it to the next place .
           2. create a temp to traverse the entire and then place the saved node in end
           3. repeat the process till K become 0.
          
          */
        
        while(k)
        {
             Node* firstNode=new Node(head->data);
             firstNode->next=NULL;
           //  delete(head);
             head=head->next;
             
             Node* temp = head;
             
             while(temp->next!=NULL)
             {
                 temp=temp->next;
             }
             temp->next=firstNode;
             k--;
        }
        return head;  
    }
};
