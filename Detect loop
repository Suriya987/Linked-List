Source: GFG


BRUTE FORCE

Time Complexity : O(N)   -> for running loop for size  N 
Spacxe Complexity : O(N)  -> using hashmap
struct Node
{
    int data;
    struct Node *next;
    Node(int x) {
        data = x;
        next = NULL;
    }
class Solution
{
    public:
    //Function to check if the linked list has a loop.
    bool detectLoop(Node* head)
    {
        if(head == NULL){
            return head;
        }
        map<Node*,bool>visited;
        Node* temp = head;
        while(temp!=0){
            if(visited[temp]==true){
                return true;
            }
            visited[temp]=true;
            temp = temp ->next;
        }
        return false;
    }
};

OPTIMIZATION

Time Complexity:  O(N) 
Space Complexity : O(1)


class Solution
{
    public:
    //Function to check if the linked list has a loop.
    bool detectLoop(Node* head)
    {
        //edge case
        if(!head)
        {
            return false;
        }
       Node* slow=head;
       Node* fast = head->next;
       
       while(fast && fast->next)  //whenever the fast become NULL it breaks .
       {
           //1.if it is loop return true
           //2. is it is not return false
           
           if(slow==fast)
             return true;
             
         slow=slow->next;
         fast=fast->next->next;
       }
       return false;
    }
};
