Source: GFG

Time Complexity:  O(N) 
Space Complexity : O(1)


class Solution
{
    public:
    //Function to check if the linked list has a loop.
    bool detectLoop(Node* head)
    {
        //edge case
        if(!head)
        {
            return false;
        }
       Node* slow=head;
       Node* fast = head->next;
       
       while(fast && fast->next)  //whenever the fast become NULL it breaks .
       {
           //1.if it is loop return true
           //2. is it is not return false
           
           if(slow==fast)
             return true;
             
         slow=slow->next;
         fast=fast->next->next;
       }
       return false;
    }
};
